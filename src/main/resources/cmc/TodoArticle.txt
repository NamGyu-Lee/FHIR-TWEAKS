# referenece 관련 항목을 강화시킨 맵 구성방향성 제시
# TODO. 1) 주석처리의 대한 처리. #가 나오면 해당 텍스트 뒤 모두 스킵.
        2) Reference Engine 구성. Transform Engine에서 executeRule을 그대로 활용하기.

# 1. reference 와 기타 Engine을 위한 mapping 을 위한 용도
* metadata
 * mapping
  * error_policy = error;
  * cacheKey = pid, cret_no, prcp_no
  * referenceData
   * referenceResource  # reference 유동형, 리소스 정보 = source 데이터 then true.
    * target = Patient
    * error_policy = # 이 리소스가 존재하지 않을 경우 방향성 (Exception, Warning, Ignore)
                      # 무시인 경우 reference 자체가 소거되서 FHIR 최종결과에 반영
    * pid -> pid :: Organization.pid
    * cret_no -> ord_dd :: -
    * prcp_no -> prcp_no :: -
   * referenceResource  # reference 유동형, 리소스 정보 = source 데이터 then true.
    * target = Oranization
    * depend_policy = # 이 리소스가 존재하지 않을 경우 방향성 (Exception, Warning, Ignore)
                      # 무시인 경우 reference 자체가 소거되서 FHIR 최종결과에 반영
    * pid -> pid :: Organization.pid
    * cret_no -> ord_dd :: -
    * prcp_no -> prcp_no :: -
----------------
# 2. 실제 Mapping 구조
* resourceType='ServiceRequest'
* id=(KEY)MERGE(Organization_id, '.',  pid, '.', prcp_no)
* meta
 * (profile).profile
  * http://phis.co.kr/fhir/StructureDefinition/StructureDefinition-svccore-servicerequest
* identifier
 * system=Organization_oid
 * value=MERGE(Organization_id, '.',  pid, '.', prcp_no)
* status='active'
* intent='order'
* code
 * (coding).coding
  * system=Organization_oid
  * code=prcp_cd
  * display=prcp_nm
* requester
 * reference=MERGE('PractitionerRole/', PractitionerRole_id)
* subject
 * reference=MERGE('Patient/', Patient_id)
* encounter
 * reference=MERGE('Encounter/', Encounter_id)